(lush-is-quiet t)
(chdir "./tmp")
(defconstant fc 20)
(defvar bf (filter (lambda (f) (str-endswith f "bind")) (ls ".")))
;(print bf)
(defvar f)
(defvar p)
(defvar m)
(defvar h)
(defvar i)

(defvar ttz)
(defvar x)
(defvar adf0cnt)

;first check fitness cases with generated programs, they should match
(do ((fp bf)) while (<> fp -1) 
  (setq f (basename fp "bind"))
  (load (str-cat f ".bind") )
;  (printf "%s %s\n" (str-cat f ".bind") (str-cat f ".dat"))
  (setq p (flatten (funcdef main)))
  (printf "%s" (str-cat f ": "))
  (setq m (load-array (str-cat f ".dat")))
  (setq h 0)
  (for (i 0 (- 20 1))
   (setq ttz (m i 0))
   (setq x (m i (+ 0 1)))
   (if (< (abs (- (main x) (m i 0))) 0.01) ( incr h) ())
  )

  (if (= h fc) (printf "PASS: Hits=%l/20 " h) (printf "FAIL: Hits=%l/20 " h))
  
  (setq adf0cnt 0)
  (do ((it p)) while (<> it -1)
   ;(prin (symbol-name it))
   (when (symbolp it) 
    (if (= (symbol-name it) "adf0") (incr adf0cnt) ())
   )
  )
  (printf " adf0 Used=%l " adf0cnt)
  (print)
)

