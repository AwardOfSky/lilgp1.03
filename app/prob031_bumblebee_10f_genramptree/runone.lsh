(lush-is-quiet t)
;(chdir "./tmp")
(defconstant fc 21)
(each ((arg (cdr argv)))
 (defvar f (basename arg "bind"))
 (printf "%s %s\n" (str-cat f ".bind") (str-cat f ".dat"))
 (load (str-cat f ".bind"))
 (defvar m (load-array (str-cat f ".dat")))
 (defvar p (flatten (funcdef main)))
 (defvar cnt 0)
 (setq cnt 0)
 (let ((h 0))
  (for (i 0 20)
   (defvar x (m 0 i))
   (defvar z (m 1 i))
   ( printf "ttz=%.5f, ttx=%.5f (main %.5f)=%.5f diff=%.5f\n" (m i 0) (m i 1 ) (m i 1) (main(m i 1))  (- (main(m i 1)) (m i 0) ) )
   (if (< (abs (- (main(m i 1)) (m i 0) )) 0.01) ( print "hit" ) ())
   (if (< (abs (- (main(m i 1)) (m i 0) )) 0.01) ( incr h) ())
  )
  ;(if (= h fc) (printf "PASS: Hits=%l/21 ADFs Used=" h) (printf "FAIL: Hits=%l/21 ADFs Used=" h))
 )
 (do ((it p)) while (<> it -1)
  (if (= (symbol-name it) "adf0") (incr cnt) ()) 
;  (print it)
 ) 
 (printf "%l adfs used in main\n" cnt)
)
;(dhc-make () fmul fdiv fsub fadd main)
